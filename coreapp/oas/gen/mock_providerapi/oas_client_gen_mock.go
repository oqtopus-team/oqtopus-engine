// Code generated by MockGen. DO NOT EDIT.
// Source: gen/providerapi/oas_client_gen.go

// Package mock_providerapi is a generated GoMock package.
package mock_providerapi

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	providerapi "github.com/oqtopus-team/oqtopus-engine/coreapp/oas/gen/providerapi"
)

// MockInvoker is a mock of Invoker interface.
type MockInvoker struct {
	ctrl     *gomock.Controller
	recorder *MockInvokerMockRecorder
}

// MockInvokerMockRecorder is the mock recorder for MockInvoker.
type MockInvokerMockRecorder struct {
	mock *MockInvoker
}

// NewMockInvoker creates a new mock instance.
func NewMockInvoker(ctrl *gomock.Controller) *MockInvoker {
	mock := &MockInvoker{ctrl: ctrl}
	mock.recorder = &MockInvokerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvoker) EXPECT() *MockInvokerMockRecorder {
	return m.recorder
}

// GetJob mocks base method.
func (m *MockInvoker) GetJob(ctx context.Context, params providerapi.GetJobParams) (providerapi.GetJobRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJob", ctx, params)
	ret0, _ := ret[0].(providerapi.GetJobRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob.
func (mr *MockInvokerMockRecorder) GetJob(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockInvoker)(nil).GetJob), ctx, params)
}

// GetJobs mocks base method.
func (m *MockInvoker) GetJobs(ctx context.Context, params providerapi.GetJobsParams) (providerapi.GetJobsRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobs", ctx, params)
	ret0, _ := ret[0].(providerapi.GetJobsRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobs indicates an expected call of GetJobs.
func (mr *MockInvokerMockRecorder) GetJobs(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobs", reflect.TypeOf((*MockInvoker)(nil).GetJobs), ctx, params)
}

// GetSsesrc mocks base method.
func (m *MockInvoker) GetSsesrc(ctx context.Context, params providerapi.GetSsesrcParams) (providerapi.GetSsesrcRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSsesrc", ctx, params)
	ret0, _ := ret[0].(providerapi.GetSsesrcRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSsesrc indicates an expected call of GetSsesrc.
func (mr *MockInvokerMockRecorder) GetSsesrc(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSsesrc", reflect.TypeOf((*MockInvoker)(nil).GetSsesrc), ctx, params)
}

// PatchDevice mocks base method.
func (m *MockInvoker) PatchDevice(ctx context.Context, request providerapi.OptDevicesUpdateDeviceRequest, params providerapi.PatchDeviceParams) (providerapi.PatchDeviceRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchDevice", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchDeviceRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchDevice indicates an expected call of PatchDevice.
func (mr *MockInvokerMockRecorder) PatchDevice(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchDevice", reflect.TypeOf((*MockInvoker)(nil).PatchDevice), ctx, request, params)
}

// PatchDeviceInfo mocks base method.
func (m *MockInvoker) PatchDeviceInfo(ctx context.Context, request providerapi.OptDevicesDeviceInfoUpdate, params providerapi.PatchDeviceInfoParams) (providerapi.PatchDeviceInfoRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchDeviceInfo", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchDeviceInfoRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchDeviceInfo indicates an expected call of PatchDeviceInfo.
func (mr *MockInvokerMockRecorder) PatchDeviceInfo(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchDeviceInfo", reflect.TypeOf((*MockInvoker)(nil).PatchDeviceInfo), ctx, request, params)
}

// PatchDeviceStatus mocks base method.
func (m *MockInvoker) PatchDeviceStatus(ctx context.Context, request providerapi.OptDevicesDeviceStatusUpdate, params providerapi.PatchDeviceStatusParams) (providerapi.PatchDeviceStatusRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchDeviceStatus", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchDeviceStatusRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchDeviceStatus indicates an expected call of PatchDeviceStatus.
func (mr *MockInvokerMockRecorder) PatchDeviceStatus(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchDeviceStatus", reflect.TypeOf((*MockInvoker)(nil).PatchDeviceStatus), ctx, request, params)
}

// PatchJob mocks base method.
func (m *MockInvoker) PatchJob(ctx context.Context, request providerapi.OptJobsJobStatusUpdate, params providerapi.PatchJobParams) (providerapi.PatchJobRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchJob", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchJobRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchJob indicates an expected call of PatchJob.
func (mr *MockInvokerMockRecorder) PatchJob(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchJob", reflect.TypeOf((*MockInvoker)(nil).PatchJob), ctx, request, params)
}

// PatchJobInfo mocks base method.
func (m *MockInvoker) PatchJobInfo(ctx context.Context, request providerapi.OptJobsUpdateJobInfoRequest, params providerapi.PatchJobInfoParams) (providerapi.PatchJobInfoRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchJobInfo", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchJobInfoRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchJobInfo indicates an expected call of PatchJobInfo.
func (mr *MockInvokerMockRecorder) PatchJobInfo(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchJobInfo", reflect.TypeOf((*MockInvoker)(nil).PatchJobInfo), ctx, request, params)
}

// PatchSselog mocks base method.
func (m *MockInvoker) PatchSselog(ctx context.Context, request providerapi.OptJobsUploadSselogRequestMultipart, params providerapi.PatchSselogParams) (providerapi.PatchSselogRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchSselog", ctx, request, params)
	ret0, _ := ret[0].(providerapi.PatchSselogRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchSselog indicates an expected call of PatchSselog.
func (mr *MockInvokerMockRecorder) PatchSselog(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchSselog", reflect.TypeOf((*MockInvoker)(nil).PatchSselog), ctx, request, params)
}

// UpdateJobTranspilerInfo mocks base method.
func (m *MockInvoker) UpdateJobTranspilerInfo(ctx context.Context, request providerapi.OptJobsUpdateJobTranspilerInfoRequest, params providerapi.UpdateJobTranspilerInfoParams) (providerapi.UpdateJobTranspilerInfoRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJobTranspilerInfo", ctx, request, params)
	ret0, _ := ret[0].(providerapi.UpdateJobTranspilerInfoRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateJobTranspilerInfo indicates an expected call of UpdateJobTranspilerInfo.
func (mr *MockInvokerMockRecorder) UpdateJobTranspilerInfo(ctx, request, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJobTranspilerInfo", reflect.TypeOf((*MockInvoker)(nil).UpdateJobTranspilerInfo), ctx, request, params)
}
