// Code generated by ogen, DO NOT EDIT.

package providerapi

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// GetJob implements get_job operation.
//
// Get a job by ID.
//
// GET /jobs/{job_id}
func (UnimplementedHandler) GetJob(ctx context.Context, params GetJobParams) (r GetJobRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetJobs implements get_jobs operation.
//
// Search jobs for a device.
//
// GET /jobs
func (UnimplementedHandler) GetJobs(ctx context.Context, params GetJobsParams) (r GetJobsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSsesrc implements get_ssesrc operation.
//
// Get SSE program source file of selected job.
//
// GET /jobs/{job_id}/ssesrc
func (UnimplementedHandler) GetSsesrc(ctx context.Context, params GetSsesrcParams) (r GetSsesrcRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchDevice implements patchDevice operation.
//
// Update a part of selected device's properties.
//
// PATCH /devices/{device_id}
func (UnimplementedHandler) PatchDevice(ctx context.Context, req OptDevicesUpdateDeviceRequest, params PatchDeviceParams) (r PatchDeviceRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchDeviceInfo implements patchDeviceInfo operation.
//
// Update device_info(calibration data) of selected device.
//
// PATCH /devices/{device_id}/device_info
func (UnimplementedHandler) PatchDeviceInfo(ctx context.Context, req OptDevicesDeviceInfoUpdate, params PatchDeviceInfoParams) (r PatchDeviceInfoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchDeviceStatus implements patchDeviceStatus operation.
//
// Update status of selected device.
//
// PATCH /devices/{device_id}/status
func (UnimplementedHandler) PatchDeviceStatus(ctx context.Context, req OptDevicesDeviceStatusUpdate, params PatchDeviceStatusParams) (r PatchDeviceStatusRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchJob implements patch_job operation.
//
// Used by device to set job status to "running".<br/>Other statuses are set by CloudAPI
// automatically when result is created.
//
// PATCH /jobs/{job_id}/status
func (UnimplementedHandler) PatchJob(ctx context.Context, req OptJobsJobStatusUpdate, params PatchJobParams) (r PatchJobRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchJobInfo implements patch_job_info operation.
//
// Used by device to set results or error details in job_info„ÄÅaccompanied by appropriate status
// updating.
// Note that job info descriptor (sampling, estimation, etc) cannot be modified.
//
// PATCH /jobs/{job_id}/job_info
func (UnimplementedHandler) PatchJobInfo(ctx context.Context, req OptJobsUpdateJobInfoRequest, params PatchJobInfoParams) (r PatchJobInfoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchSselog implements patch_sselog operation.
//
// Upload SSE log file of selected job.
//
// PATCH /jobs/{job_id}/sselog
func (UnimplementedHandler) PatchSselog(ctx context.Context, req OptJobsUploadSselogRequestMultipart, params PatchSselogParams) (r PatchSselogRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateJobTranspilerInfo implements update_job_transpiler_info operation.
//
// Overwrite selected quantum job's transpiler_info.
//
// PUT /jobs/{job_id}/transpiler_info
func (UnimplementedHandler) UpdateJobTranspilerInfo(ctx context.Context, req OptJobsUpdateJobTranspilerInfoRequest, params UpdateJobTranspilerInfoParams) (r UpdateJobTranspilerInfoRes, _ error) {
	return r, ht.ErrNotImplemented
}
