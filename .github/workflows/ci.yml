on:
  push:
    branches: [ main, dev, feature/* ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main, dev, feature/* ]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    # for detailed version information
    - name: Checkout latest tag
      run: |
        git fetch --prune --unshallow

    - uses: actions/setup-go@v3
      with:
        go-version: '^1.20.4'
    - run: go version

    - name: Git Log
      run: |
        git log --pretty=oneline --abbrev-commit --decorate --graph -n 5

    - name: Check Docker Version
      run: |
        docker version

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Set Version
      run: |
        git describe --tags --always --dirty
        echo "VERSION=$(git describe --tags --always --dirty)" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pushd ./circuit_combiner && python -m pip install . &&  python -m pip install .[dev] && popd
        pushd ./estimation && python -m pip install . && popd
        pushd ./mitigation && python -m pip install . && popd
    - name: Unit Test
      working-directory: ./coreapp
      run: task unit-test-all
